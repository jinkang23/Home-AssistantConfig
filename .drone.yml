kind: pipeline
name: prep

steps:
  - name: stage_files
    image: alpine:latest
    commands:
      -  mv fake_secrets.yaml secrets.yaml

---
kind: pipeline
name: validate

steps:
  - name: yamllint
    image: cytopia/yamllint:latest
    commands:
      - yamllint .
    # failure: ignore
  - name: jsonlint
    image: sahsu/docker-jsonlint
    commands:
      - jsonlint --version || true
      - |
        for file in $(find . -type f -name "*.json" -path "mysensors.json" -prune); do
            if ! jsonlint -q $file; then
            export FAILED=1
            else
            echo "$file OK"
            fi
        done
        if [ "${FAILED}" = "1" ]; then
            exit 1
        fi
    # failure: ignore

---
kind: pipeline
name: test

steps:
  - name: ha-latest
    image: homeassistant/home-assistant:latest
    pull: if-not-exists
    commands:
      # - mv fake_secrets.yaml secrets.yaml
      - python -m homeassistant --script check_config --info all --config .
  - name: ha-rc
    image: homeassistant/home-assistant:rc
    pull: if-not-exists
    commands:
      # - mv fake_secrets.yaml secrets.yaml
      - python -m homeassistant --script check_config --info all --config .
  - name: ha-dev
    image: homeassistant/home-assistant:dev
    pull: if-not-exists
    commands:
      # - mv fake_secrets.yaml secrets.yaml
      - python -m homeassistant --script check_config --info all --config .
#
# ---
# kind: pipeline
# type: ssh
# name: upgrade

# server:
#   host: 172.16.30.20
#   user: pi
#   ssh_key:
#     from_secret: SSH_KEY

# steps:
#   - name: upgrade
#     commands:
#       - cd /opt/configurations/docker-compose/homeassistant
#       - docker-compose pull
#   - name: clean
#     commands:
#       - cd /opt/configurations/docker-compose/homeassistant
#       - docker image prune -f
#       - docker container prune -f

# ---
# kind: pipeline
# type: ssh
# name: deploy

# trigger:
#   branch:
#     - master
#   event:
#     exclude:
#       - pull_request

# depends_on:
#   - test
#   - upgrade

# server:
#   host: 192.168.178.5
#   user: pi
#   ssh_key:
#     from_secret: SSH_KEY

# steps:
#   - name: pull
#     commands:
#       - cd /media/usbstick/container/homeassistant/config
#       - git fetch
#       - git reset --hard origin/master

#   - name: prepare
#     environment:
#       TOKEN:
#         from_secret: token
#       URL:
#         from_secret: url
#     commands:
#       - >
#         curl -X POST -H "Authorization: Bearer $TOKEN" -H 'Content-Type: application/json' -d '{"entity_id": "script.prepare_restart"}' https://$URL:8123/api/services/script/turn_on
#     failure: ignore

#   - name: restart
#     commands:
#       - cd /opt/configurations/docker-compose/homeassistant
#       - bash
#       - docker-compose down
#       - docker-compose up -d
